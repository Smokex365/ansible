---
- name: Install Docker
  hosts: '{{ ansible_limit | default(omit) }}'
  become: true
  #become_user: dbadmin
  become_method: sudo
  #vars_files:
  #  - /etc/ansible/vaults/sudo.yml
  vars:
    container_count: 1
    portainer_name: portainer
    portainer_image: portainer/portainer-ce:latest
    portainer_agent_name: portainer-agent
    portainer_agent_image: portainer/agent:latest

  roles:
    - geerlingguy.docker

  tasks:
    - name: Pull Portainer image
      community.docker.docker_image:
        name: "{{ portainer_agent_image }}"
        source: pull
    
    - name: Pull Portainer Agent image
      community.docker.docker_image:
        name: "{{ portainer_image }}"
        source: pull
    
    - name: Creates docker directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0755
      loop:
        - /docker
        - /docker/config
        - /docker/store
        - /docker/compose

    - name: Install Portainer
      community.docker.docker_container:
        name: "{{ portainer_name }}"
        image: "{{ portainer_image }}"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /docker/config/portainer:/data
        ports:
          - 9443:9443 
          - 8000:8000
        restart_policy: unless-stopped
        #command: "{{ default_container_command }}"
        state: started
      #with_sequence: count={{ container_count }}

    - name: Install Portainer Agent
      community.docker.docker_container:
        name: "{{ portainer_agent_name }}"
        image: "{{ portainer_agent_image }}"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/lib/docker/volumes:/var/lib/docker/volumes
        ports:
          - 9001:9001
        restart_policy: unless-stopped
        #command: "{{ default_container_command }}"
        state: started
      #with_sequence: count={{ container_count }}
